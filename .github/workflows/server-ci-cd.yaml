name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - development

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        cd server
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" >> $GITHUB_ENV
        echo "DEBUG=${{ secrets.DEBUG }}" >> $GITHUB_ENV
        echo "ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }}" >> $GITHUB_ENV
        echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db" >> $GITHUB_ENV
        echo "AFRICAS_TALKING_USERNAME=${{ secrets.AFRICAS_TALKING_USERNAME }}" >> $GITHUB_ENV
        echo "AFRICAS_TALKING_API_KEY=${{ secrets.AFRICAS_TALKING_API_KEY }}" >> $GITHUB_ENV

    - name: Apply migrations
      run: |
        cd server
        python manage.py migrate

    - name: Run unit tests
      run: |
        cd server
        coverage run --source='.' manage.py test
        coverage report

  auto-merge:
    if: github.ref == 'refs/heads/development'
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure Git for GitHub Actions bot
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
        
      - name: Merge to main
        run: |
          git fetch origin
          git checkout main
          git merge origin/development --strategy-option theirs --no-ff --allow-unrelated-histories --commit -m "Auto-merge from development to main"
          git push origin main

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: |
        cd server
        docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/gofoods-server:latest .

    - name: Push Docker image
      if: success()
      run: |
        cd server
        docker push ${{ secrets.DOCKER_HUB_USERNAME }}/gofoods-server:latest .
